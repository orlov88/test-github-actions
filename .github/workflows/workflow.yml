name: "ci-cd test task"

'on':
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  AWS_REGION: "eu-west-2"                  # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: "app-registry"           # set this to your Amazon ECR repository name
  CONTAINER_NAME: "app-registry"
  IMAGE_TAG: ${{ github.sha }}
  ECR_REGISTRY: "771840051868.dkr.ecr.eu-west-2.amazonaws.com"

jobs:
  ci:
    name: "Building"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v3"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  cd:
    name: "Deployment"
    runs-on: "ubuntu-latest"
    needs:
      - ci
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v3"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform
        run: |
          terraform -chdir=terraform-ecs/ecs/ init -input=false

      - name: Plan Terraform
        run: |
          terraform -chdir=terraform-ecs/ecs/ plan -input=false -no-color -var="image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" -lock=false

      - name: Apply Terraform
        id: apply
        continue-on-error: true
        run: |
          terraform -chdir=terraform-ecs/ecs/ apply -auto-approve -input=false -no-color -var="image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" -lock=false
